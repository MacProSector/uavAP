////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2018 University of Illinois Board of Trustees
// 
// This file is part of uavAP.
// 
// uavAP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// uavAP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
////////////////////////////////////////////////////////////////////////////////
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ManeuverPlanner.proto

#include "ManeuverPlanner.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Shapes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Shapes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Rectangle;
}  // namespace protobuf_Shapes_2eproto
class ManeuverPlannerParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManeuverPlannerParams>
      _instance;
} _ManeuverPlannerParams_default_instance_;
class ManeuverPlannerStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManeuverPlannerStatus>
      _instance;
} _ManeuverPlannerStatus_default_instance_;
namespace protobuf_ManeuverPlanner_2eproto {
static void InitDefaultsManeuverPlannerParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ManeuverPlannerParams_default_instance_;
    new (ptr) ::ManeuverPlannerParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ManeuverPlannerParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ManeuverPlannerParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsManeuverPlannerParams}, {
      &protobuf_Shapes_2eproto::scc_info_Rectangle.base,}};

static void InitDefaultsManeuverPlannerStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ManeuverPlannerStatus_default_instance_;
    new (ptr) ::ManeuverPlannerStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ManeuverPlannerStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ManeuverPlannerStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsManeuverPlannerStatus}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ManeuverPlannerParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManeuverPlannerStatus.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManeuverPlannerParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManeuverPlannerParams, safety_rectangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManeuverPlannerParams, safety_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManeuverPlannerParams, inner_radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManeuverPlannerParams, return_velocity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManeuverPlannerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManeuverPlannerStatus, maneuver_set_active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ManeuverPlannerStatus, manual_override_active_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ManeuverPlannerParams)},
  { 9, -1, sizeof(::ManeuverPlannerStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ManeuverPlannerParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ManeuverPlannerStatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ManeuverPlanner.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025ManeuverPlanner.proto\032\014Shapes.proto\"\203\001"
      "\n\025ManeuverPlannerParams\022$\n\020safety_rectan"
      "gle\030\001 \001(\0132\n.Rectangle\022\025\n\rsafety_height\030\002"
      " \001(\001\022\024\n\014inner_radius\030\003 \001(\001\022\027\n\017return_vel"
      "ocity\030\004 \001(\001\"T\n\025ManeuverPlannerStatus\022\033\n\023"
      "maneuver_set_active\030\001 \001(\010\022\036\n\026manual_over"
      "ride_active\030\002 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ManeuverPlanner.proto", &protobuf_RegisterTypes);
  ::protobuf_Shapes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ManeuverPlanner_2eproto

// ===================================================================

void ManeuverPlannerParams::InitAsDefaultInstance() {
  ::_ManeuverPlannerParams_default_instance_._instance.get_mutable()->safety_rectangle_ = const_cast< ::Rectangle*>(
      ::Rectangle::internal_default_instance());
}
void ManeuverPlannerParams::clear_safety_rectangle() {
  if (GetArenaNoVirtual() == NULL && safety_rectangle_ != NULL) {
    delete safety_rectangle_;
  }
  safety_rectangle_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManeuverPlannerParams::kSafetyRectangleFieldNumber;
const int ManeuverPlannerParams::kSafetyHeightFieldNumber;
const int ManeuverPlannerParams::kInnerRadiusFieldNumber;
const int ManeuverPlannerParams::kReturnVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManeuverPlannerParams::ManeuverPlannerParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ManeuverPlanner_2eproto::scc_info_ManeuverPlannerParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ManeuverPlannerParams)
}
ManeuverPlannerParams::ManeuverPlannerParams(const ManeuverPlannerParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_safety_rectangle()) {
    safety_rectangle_ = new ::Rectangle(*from.safety_rectangle_);
  } else {
    safety_rectangle_ = NULL;
  }
  ::memcpy(&safety_height_, &from.safety_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&return_velocity_) -
    reinterpret_cast<char*>(&safety_height_)) + sizeof(return_velocity_));
  // @@protoc_insertion_point(copy_constructor:ManeuverPlannerParams)
}

void ManeuverPlannerParams::SharedCtor() {
  ::memset(&safety_rectangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&return_velocity_) -
      reinterpret_cast<char*>(&safety_rectangle_)) + sizeof(return_velocity_));
}

ManeuverPlannerParams::~ManeuverPlannerParams() {
  // @@protoc_insertion_point(destructor:ManeuverPlannerParams)
  SharedDtor();
}

void ManeuverPlannerParams::SharedDtor() {
  if (this != internal_default_instance()) delete safety_rectangle_;
}

void ManeuverPlannerParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManeuverPlannerParams::descriptor() {
  ::protobuf_ManeuverPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ManeuverPlanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManeuverPlannerParams& ManeuverPlannerParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ManeuverPlanner_2eproto::scc_info_ManeuverPlannerParams.base);
  return *internal_default_instance();
}


void ManeuverPlannerParams::Clear() {
// @@protoc_insertion_point(message_clear_start:ManeuverPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && safety_rectangle_ != NULL) {
    delete safety_rectangle_;
  }
  safety_rectangle_ = NULL;
  ::memset(&safety_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&return_velocity_) -
      reinterpret_cast<char*>(&safety_height_)) + sizeof(return_velocity_));
  _internal_metadata_.Clear();
}

bool ManeuverPlannerParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ManeuverPlannerParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Rectangle safety_rectangle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_safety_rectangle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double safety_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &safety_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double inner_radius = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &inner_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double return_velocity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &return_velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ManeuverPlannerParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ManeuverPlannerParams)
  return false;
#undef DO_
}

void ManeuverPlannerParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ManeuverPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Rectangle safety_rectangle = 1;
  if (this->has_safety_rectangle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_safety_rectangle(), output);
  }

  // double safety_height = 2;
  if (this->safety_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->safety_height(), output);
  }

  // double inner_radius = 3;
  if (this->inner_radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->inner_radius(), output);
  }

  // double return_velocity = 4;
  if (this->return_velocity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->return_velocity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ManeuverPlannerParams)
}

::google::protobuf::uint8* ManeuverPlannerParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ManeuverPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Rectangle safety_rectangle = 1;
  if (this->has_safety_rectangle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_safety_rectangle(), deterministic, target);
  }

  // double safety_height = 2;
  if (this->safety_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->safety_height(), target);
  }

  // double inner_radius = 3;
  if (this->inner_radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->inner_radius(), target);
  }

  // double return_velocity = 4;
  if (this->return_velocity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->return_velocity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ManeuverPlannerParams)
  return target;
}

size_t ManeuverPlannerParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManeuverPlannerParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Rectangle safety_rectangle = 1;
  if (this->has_safety_rectangle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *safety_rectangle_);
  }

  // double safety_height = 2;
  if (this->safety_height() != 0) {
    total_size += 1 + 8;
  }

  // double inner_radius = 3;
  if (this->inner_radius() != 0) {
    total_size += 1 + 8;
  }

  // double return_velocity = 4;
  if (this->return_velocity() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManeuverPlannerParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ManeuverPlannerParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ManeuverPlannerParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManeuverPlannerParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ManeuverPlannerParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ManeuverPlannerParams)
    MergeFrom(*source);
  }
}

void ManeuverPlannerParams::MergeFrom(const ManeuverPlannerParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ManeuverPlannerParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_safety_rectangle()) {
    mutable_safety_rectangle()->::Rectangle::MergeFrom(from.safety_rectangle());
  }
  if (from.safety_height() != 0) {
    set_safety_height(from.safety_height());
  }
  if (from.inner_radius() != 0) {
    set_inner_radius(from.inner_radius());
  }
  if (from.return_velocity() != 0) {
    set_return_velocity(from.return_velocity());
  }
}

void ManeuverPlannerParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ManeuverPlannerParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManeuverPlannerParams::CopyFrom(const ManeuverPlannerParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManeuverPlannerParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManeuverPlannerParams::IsInitialized() const {
  return true;
}

void ManeuverPlannerParams::Swap(ManeuverPlannerParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManeuverPlannerParams::InternalSwap(ManeuverPlannerParams* other) {
  using std::swap;
  swap(safety_rectangle_, other->safety_rectangle_);
  swap(safety_height_, other->safety_height_);
  swap(inner_radius_, other->inner_radius_);
  swap(return_velocity_, other->return_velocity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManeuverPlannerParams::GetMetadata() const {
  protobuf_ManeuverPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ManeuverPlanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ManeuverPlannerStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManeuverPlannerStatus::kManeuverSetActiveFieldNumber;
const int ManeuverPlannerStatus::kManualOverrideActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManeuverPlannerStatus::ManeuverPlannerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ManeuverPlanner_2eproto::scc_info_ManeuverPlannerStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ManeuverPlannerStatus)
}
ManeuverPlannerStatus::ManeuverPlannerStatus(const ManeuverPlannerStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&maneuver_set_active_, &from.maneuver_set_active_,
    static_cast<size_t>(reinterpret_cast<char*>(&manual_override_active_) -
    reinterpret_cast<char*>(&maneuver_set_active_)) + sizeof(manual_override_active_));
  // @@protoc_insertion_point(copy_constructor:ManeuverPlannerStatus)
}

void ManeuverPlannerStatus::SharedCtor() {
  ::memset(&maneuver_set_active_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&manual_override_active_) -
      reinterpret_cast<char*>(&maneuver_set_active_)) + sizeof(manual_override_active_));
}

ManeuverPlannerStatus::~ManeuverPlannerStatus() {
  // @@protoc_insertion_point(destructor:ManeuverPlannerStatus)
  SharedDtor();
}

void ManeuverPlannerStatus::SharedDtor() {
}

void ManeuverPlannerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManeuverPlannerStatus::descriptor() {
  ::protobuf_ManeuverPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ManeuverPlanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManeuverPlannerStatus& ManeuverPlannerStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ManeuverPlanner_2eproto::scc_info_ManeuverPlannerStatus.base);
  return *internal_default_instance();
}


void ManeuverPlannerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ManeuverPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&maneuver_set_active_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&manual_override_active_) -
      reinterpret_cast<char*>(&maneuver_set_active_)) + sizeof(manual_override_active_));
  _internal_metadata_.Clear();
}

bool ManeuverPlannerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ManeuverPlannerStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool maneuver_set_active = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maneuver_set_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool manual_override_active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &manual_override_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ManeuverPlannerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ManeuverPlannerStatus)
  return false;
#undef DO_
}

void ManeuverPlannerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ManeuverPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool maneuver_set_active = 1;
  if (this->maneuver_set_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->maneuver_set_active(), output);
  }

  // bool manual_override_active = 2;
  if (this->manual_override_active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->manual_override_active(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ManeuverPlannerStatus)
}

::google::protobuf::uint8* ManeuverPlannerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ManeuverPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool maneuver_set_active = 1;
  if (this->maneuver_set_active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->maneuver_set_active(), target);
  }

  // bool manual_override_active = 2;
  if (this->manual_override_active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->manual_override_active(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ManeuverPlannerStatus)
  return target;
}

size_t ManeuverPlannerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ManeuverPlannerStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool maneuver_set_active = 1;
  if (this->maneuver_set_active() != 0) {
    total_size += 1 + 1;
  }

  // bool manual_override_active = 2;
  if (this->manual_override_active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManeuverPlannerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ManeuverPlannerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ManeuverPlannerStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManeuverPlannerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ManeuverPlannerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ManeuverPlannerStatus)
    MergeFrom(*source);
  }
}

void ManeuverPlannerStatus::MergeFrom(const ManeuverPlannerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ManeuverPlannerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maneuver_set_active() != 0) {
    set_maneuver_set_active(from.maneuver_set_active());
  }
  if (from.manual_override_active() != 0) {
    set_manual_override_active(from.manual_override_active());
  }
}

void ManeuverPlannerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ManeuverPlannerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManeuverPlannerStatus::CopyFrom(const ManeuverPlannerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ManeuverPlannerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManeuverPlannerStatus::IsInitialized() const {
  return true;
}

void ManeuverPlannerStatus::Swap(ManeuverPlannerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManeuverPlannerStatus::InternalSwap(ManeuverPlannerStatus* other) {
  using std::swap;
  swap(maneuver_set_active_, other->maneuver_set_active_);
  swap(manual_override_active_, other->manual_override_active_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManeuverPlannerStatus::GetMetadata() const {
  protobuf_ManeuverPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ManeuverPlanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ManeuverPlannerParams* Arena::CreateMaybeMessage< ::ManeuverPlannerParams >(Arena* arena) {
  return Arena::CreateInternal< ::ManeuverPlannerParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ManeuverPlannerStatus* Arena::CreateMaybeMessage< ::ManeuverPlannerStatus >(Arena* arena) {
  return Arena::CreateInternal< ::ManeuverPlannerStatus >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
