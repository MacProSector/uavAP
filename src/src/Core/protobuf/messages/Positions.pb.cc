// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Positions.proto

#include "Positions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_Positions_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PositionENU_Positions_2eproto;
class PositionENUDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionENU> _instance;
} _PositionENU_default_instance_;
class PositionENUAdvancedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionENUAdvanced> _instance;
} _PositionENUAdvanced_default_instance_;
class PositionWgs84DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PositionWgs84> _instance;
} _PositionWgs84_default_instance_;
static void InitDefaultsPositionENU_Positions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PositionENU_default_instance_;
    new (ptr) ::PositionENU();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PositionENU::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PositionENU_Positions_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPositionENU_Positions_2eproto}, {}};

static void InitDefaultsPositionENUAdvanced_Positions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PositionENUAdvanced_default_instance_;
    new (ptr) ::PositionENUAdvanced();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PositionENUAdvanced::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PositionENUAdvanced_Positions_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPositionENUAdvanced_Positions_2eproto}, {
      &scc_info_PositionENU_Positions_2eproto.base,}};

static void InitDefaultsPositionWgs84_Positions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PositionWgs84_default_instance_;
    new (ptr) ::PositionWgs84();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PositionWgs84::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PositionWgs84_Positions_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPositionWgs84_Positions_2eproto}, {}};

void InitDefaults_Positions_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PositionENU_Positions_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PositionENUAdvanced_Positions_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PositionWgs84_Positions_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_Positions_2eproto[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_Positions_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_Positions_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_Positions_2eproto::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionENU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionENU, east_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionENU, north_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionENU, up_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionENUAdvanced, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionENUAdvanced, position_enu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionENUAdvanced, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionENUAdvanced, hemisphere_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionWgs84, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionWgs84, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionWgs84, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PositionWgs84, altitude_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PositionENU)},
  { 8, -1, sizeof(::PositionENUAdvanced)},
  { 16, -1, sizeof(::PositionWgs84)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PositionENU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PositionENUAdvanced_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PositionWgs84_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_Positions_2eproto = {
  {}, AddDescriptors_Positions_2eproto, "Positions.proto", schemas,
  file_default_instances, TableStruct_Positions_2eproto::offsets,
  file_level_metadata_Positions_2eproto, 3, file_level_enum_descriptors_Positions_2eproto, file_level_service_descriptors_Positions_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_Positions_2eproto = {
  false, InitDefaults_Positions_2eproto, 
  "\n\017Positions.proto\"6\n\013PositionENU\022\014\n\004east"
  "\030\001 \001(\001\022\r\n\005north\030\002 \001(\001\022\n\n\002up\030\003 \001(\001\"h\n\023Pos"
  "itionENUAdvanced\022\"\n\014position_enu\030\001 \001(\0132\014"
  ".PositionENU\022\014\n\004zone\030\002 \001(\005\022\037\n\nhemisphere"
  "\030\003 \001(\0162\013.Hemisphere\"F\n\rPositionWgs84\022\021\n\t"
  "longitude\030\001 \001(\001\022\020\n\010latitude\030\002 \001(\001\022\020\n\010alt"
  "itude\030\003 \001(\001*\"\n\nHemisphere\022\t\n\005NORTH\020\000\022\t\n\005"
  "SOUTH\020\001b\006proto3"
,
  "Positions.proto", &assign_descriptors_table_Positions_2eproto, 295,
};

void AddDescriptors_Positions_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_Positions_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Positions_2eproto = []() { AddDescriptors_Positions_2eproto(); return true; }();
const ::google::protobuf::EnumDescriptor* Hemisphere_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Positions_2eproto);
  return file_level_enum_descriptors_Positions_2eproto[0];
}
bool Hemisphere_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PositionENU::InitAsDefaultInstance() {
}
class PositionENU::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionENU::kEastFieldNumber;
const int PositionENU::kNorthFieldNumber;
const int PositionENU::kUpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionENU::PositionENU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PositionENU)
}
PositionENU::PositionENU(const PositionENU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&east_, &from.east_,
    static_cast<size_t>(reinterpret_cast<char*>(&up_) -
    reinterpret_cast<char*>(&east_)) + sizeof(up_));
  // @@protoc_insertion_point(copy_constructor:PositionENU)
}

void PositionENU::SharedCtor() {
  ::memset(&east_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&up_) -
      reinterpret_cast<char*>(&east_)) + sizeof(up_));
}

PositionENU::~PositionENU() {
  // @@protoc_insertion_point(destructor:PositionENU)
  SharedDtor();
}

void PositionENU::SharedDtor() {
}

void PositionENU::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PositionENU& PositionENU::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PositionENU_Positions_2eproto.base);
  return *internal_default_instance();
}


void PositionENU::Clear() {
// @@protoc_insertion_point(message_clear_start:PositionENU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&east_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&up_) -
      reinterpret_cast<char*>(&east_)) + sizeof(up_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PositionENU::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PositionENU*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // double east = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        double val;
        ::std::memcpy(&val, ptr, 8);
        ptr += 8;
        msg->set_east(val);
        break;
      }
      // double north = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        double val;
        ::std::memcpy(&val, ptr, 8);
        ptr += 8;
        msg->set_north(val);
        break;
      }
      // double up = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        double val;
        ::std::memcpy(&val, ptr, 8);
        ptr += 8;
        msg->set_up(val);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PositionENU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PositionENU)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double east = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &east_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double north = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &north_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double up = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PositionENU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PositionENU)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PositionENU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PositionENU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double east = 1;
  if (this->east() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->east(), output);
  }

  // double north = 2;
  if (this->north() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->north(), output);
  }

  // double up = 3;
  if (this->up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->up(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PositionENU)
}

::google::protobuf::uint8* PositionENU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PositionENU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double east = 1;
  if (this->east() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->east(), target);
  }

  // double north = 2;
  if (this->north() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->north(), target);
  }

  // double up = 3;
  if (this->up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->up(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PositionENU)
  return target;
}

size_t PositionENU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PositionENU)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double east = 1;
  if (this->east() != 0) {
    total_size += 1 + 8;
  }

  // double north = 2;
  if (this->north() != 0) {
    total_size += 1 + 8;
  }

  // double up = 3;
  if (this->up() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionENU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PositionENU)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionENU* source =
      ::google::protobuf::DynamicCastToGenerated<PositionENU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PositionENU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PositionENU)
    MergeFrom(*source);
  }
}

void PositionENU::MergeFrom(const PositionENU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PositionENU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.east() != 0) {
    set_east(from.east());
  }
  if (from.north() != 0) {
    set_north(from.north());
  }
  if (from.up() != 0) {
    set_up(from.up());
  }
}

void PositionENU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PositionENU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionENU::CopyFrom(const PositionENU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PositionENU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionENU::IsInitialized() const {
  return true;
}

void PositionENU::Swap(PositionENU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionENU::InternalSwap(PositionENU* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(east_, other->east_);
  swap(north_, other->north_);
  swap(up_, other->up_);
}

::google::protobuf::Metadata PositionENU::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Positions_2eproto);
  return ::file_level_metadata_Positions_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PositionENUAdvanced::InitAsDefaultInstance() {
  ::_PositionENUAdvanced_default_instance_._instance.get_mutable()->position_enu_ = const_cast< ::PositionENU*>(
      ::PositionENU::internal_default_instance());
}
class PositionENUAdvanced::HasBitSetters {
 public:
  static const ::PositionENU& position_enu(const PositionENUAdvanced* msg);
};

const ::PositionENU&
PositionENUAdvanced::HasBitSetters::position_enu(const PositionENUAdvanced* msg) {
  return *msg->position_enu_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionENUAdvanced::kPositionEnuFieldNumber;
const int PositionENUAdvanced::kZoneFieldNumber;
const int PositionENUAdvanced::kHemisphereFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionENUAdvanced::PositionENUAdvanced()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PositionENUAdvanced)
}
PositionENUAdvanced::PositionENUAdvanced(const PositionENUAdvanced& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position_enu()) {
    position_enu_ = new ::PositionENU(*from.position_enu_);
  } else {
    position_enu_ = NULL;
  }
  ::memcpy(&zone_, &from.zone_,
    static_cast<size_t>(reinterpret_cast<char*>(&hemisphere_) -
    reinterpret_cast<char*>(&zone_)) + sizeof(hemisphere_));
  // @@protoc_insertion_point(copy_constructor:PositionENUAdvanced)
}

void PositionENUAdvanced::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PositionENUAdvanced_Positions_2eproto.base);
  ::memset(&position_enu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hemisphere_) -
      reinterpret_cast<char*>(&position_enu_)) + sizeof(hemisphere_));
}

PositionENUAdvanced::~PositionENUAdvanced() {
  // @@protoc_insertion_point(destructor:PositionENUAdvanced)
  SharedDtor();
}

void PositionENUAdvanced::SharedDtor() {
  if (this != internal_default_instance()) delete position_enu_;
}

void PositionENUAdvanced::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PositionENUAdvanced& PositionENUAdvanced::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PositionENUAdvanced_Positions_2eproto.base);
  return *internal_default_instance();
}


void PositionENUAdvanced::Clear() {
// @@protoc_insertion_point(message_clear_start:PositionENUAdvanced)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_enu_ != NULL) {
    delete position_enu_;
  }
  position_enu_ = NULL;
  ::memset(&zone_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hemisphere_) -
      reinterpret_cast<char*>(&zone_)) + sizeof(hemisphere_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PositionENUAdvanced::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PositionENUAdvanced*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // .PositionENU position_enu = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        parser_till_end = ::PositionENU::_InternalParse;
        object = msg->mutable_position_enu();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // int32 zone = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_zone(value);
        break;
      }
      // .Hemisphere hemisphere = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::Hemisphere value = static_cast<::Hemisphere>(val);
        msg->set_hemisphere(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PositionENUAdvanced::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PositionENUAdvanced)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PositionENU position_enu = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_enu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 zone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zone_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Hemisphere hemisphere = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hemisphere(static_cast< ::Hemisphere >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PositionENUAdvanced)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PositionENUAdvanced)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PositionENUAdvanced::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PositionENUAdvanced)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PositionENU position_enu = 1;
  if (this->has_position_enu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::position_enu(this), output);
  }

  // int32 zone = 2;
  if (this->zone() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->zone(), output);
  }

  // .Hemisphere hemisphere = 3;
  if (this->hemisphere() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->hemisphere(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PositionENUAdvanced)
}

::google::protobuf::uint8* PositionENUAdvanced::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PositionENUAdvanced)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PositionENU position_enu = 1;
  if (this->has_position_enu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::position_enu(this), deterministic, target);
  }

  // int32 zone = 2;
  if (this->zone() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->zone(), target);
  }

  // .Hemisphere hemisphere = 3;
  if (this->hemisphere() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->hemisphere(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PositionENUAdvanced)
  return target;
}

size_t PositionENUAdvanced::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PositionENUAdvanced)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PositionENU position_enu = 1;
  if (this->has_position_enu()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_enu_);
  }

  // int32 zone = 2;
  if (this->zone() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zone());
  }

  // .Hemisphere hemisphere = 3;
  if (this->hemisphere() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hemisphere());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionENUAdvanced::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PositionENUAdvanced)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionENUAdvanced* source =
      ::google::protobuf::DynamicCastToGenerated<PositionENUAdvanced>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PositionENUAdvanced)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PositionENUAdvanced)
    MergeFrom(*source);
  }
}

void PositionENUAdvanced::MergeFrom(const PositionENUAdvanced& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PositionENUAdvanced)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position_enu()) {
    mutable_position_enu()->::PositionENU::MergeFrom(from.position_enu());
  }
  if (from.zone() != 0) {
    set_zone(from.zone());
  }
  if (from.hemisphere() != 0) {
    set_hemisphere(from.hemisphere());
  }
}

void PositionENUAdvanced::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PositionENUAdvanced)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionENUAdvanced::CopyFrom(const PositionENUAdvanced& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PositionENUAdvanced)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionENUAdvanced::IsInitialized() const {
  return true;
}

void PositionENUAdvanced::Swap(PositionENUAdvanced* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionENUAdvanced::InternalSwap(PositionENUAdvanced* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_enu_, other->position_enu_);
  swap(zone_, other->zone_);
  swap(hemisphere_, other->hemisphere_);
}

::google::protobuf::Metadata PositionENUAdvanced::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Positions_2eproto);
  return ::file_level_metadata_Positions_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PositionWgs84::InitAsDefaultInstance() {
}
class PositionWgs84::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PositionWgs84::kLongitudeFieldNumber;
const int PositionWgs84::kLatitudeFieldNumber;
const int PositionWgs84::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PositionWgs84::PositionWgs84()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PositionWgs84)
}
PositionWgs84::PositionWgs84(const PositionWgs84& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitude_, &from.longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&altitude_) -
    reinterpret_cast<char*>(&longitude_)) + sizeof(altitude_));
  // @@protoc_insertion_point(copy_constructor:PositionWgs84)
}

void PositionWgs84::SharedCtor() {
  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(altitude_));
}

PositionWgs84::~PositionWgs84() {
  // @@protoc_insertion_point(destructor:PositionWgs84)
  SharedDtor();
}

void PositionWgs84::SharedDtor() {
}

void PositionWgs84::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PositionWgs84& PositionWgs84::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PositionWgs84_Positions_2eproto.base);
  return *internal_default_instance();
}


void PositionWgs84::Clear() {
// @@protoc_insertion_point(message_clear_start:PositionWgs84)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(altitude_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PositionWgs84::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PositionWgs84*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // double longitude = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        double val;
        ::std::memcpy(&val, ptr, 8);
        ptr += 8;
        msg->set_longitude(val);
        break;
      }
      // double latitude = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        double val;
        ::std::memcpy(&val, ptr, 8);
        ptr += 8;
        msg->set_latitude(val);
        break;
      }
      // double altitude = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        double val;
        ::std::memcpy(&val, ptr, 8);
        ptr += 8;
        msg->set_altitude(val);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PositionWgs84::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PositionWgs84)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double longitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double altitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PositionWgs84)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PositionWgs84)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PositionWgs84::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PositionWgs84)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->longitude(), output);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->latitude(), output);
  }

  // double altitude = 3;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->altitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PositionWgs84)
}

::google::protobuf::uint8* PositionWgs84::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PositionWgs84)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->longitude(), target);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->latitude(), target);
  }

  // double altitude = 3;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->altitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PositionWgs84)
  return target;
}

size_t PositionWgs84::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PositionWgs84)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // double altitude = 3;
  if (this->altitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionWgs84::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PositionWgs84)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionWgs84* source =
      ::google::protobuf::DynamicCastToGenerated<PositionWgs84>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PositionWgs84)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PositionWgs84)
    MergeFrom(*source);
  }
}

void PositionWgs84::MergeFrom(const PositionWgs84& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PositionWgs84)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
}

void PositionWgs84::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PositionWgs84)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionWgs84::CopyFrom(const PositionWgs84& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PositionWgs84)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionWgs84::IsInitialized() const {
  return true;
}

void PositionWgs84::Swap(PositionWgs84* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PositionWgs84::InternalSwap(PositionWgs84* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
  swap(altitude_, other->altitude_);
}

::google::protobuf::Metadata PositionWgs84::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Positions_2eproto);
  return ::file_level_metadata_Positions_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PositionENU* Arena::CreateMaybeMessage< ::PositionENU >(Arena* arena) {
  return Arena::CreateInternal< ::PositionENU >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PositionENUAdvanced* Arena::CreateMaybeMessage< ::PositionENUAdvanced >(Arena* arena) {
  return Arena::CreateInternal< ::PositionENUAdvanced >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PositionWgs84* Arena::CreateMaybeMessage< ::PositionWgs84 >(Arena* arena) {
  return Arena::CreateInternal< ::PositionWgs84 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
