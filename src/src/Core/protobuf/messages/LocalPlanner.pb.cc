////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2018 University of Illinois Board of Trustees
// 
// This file is part of uavAP.
// 
// uavAP is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// uavAP is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
////////////////////////////////////////////////////////////////////////////////
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LocalPlanner.proto

#include "LocalPlanner.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_LocalPlanner_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LocalPlanner_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AirplaneLinearLocalPlannerParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LocalPlanner_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AirplaneLinearLocalPlannerStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LocalPlanner_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LinearLocalPlannerParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LocalPlanner_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_LinearLocalPlannerStatus;
}  // namespace protobuf_LocalPlanner_2eproto
namespace protobuf_Velocities_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Velocities_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VelocityBody;
}  // namespace protobuf_Velocities_2eproto
class AirplaneLinearLocalPlannerStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AirplaneLinearLocalPlannerStatus>
      _instance;
} _AirplaneLinearLocalPlannerStatus_default_instance_;
class LinearLocalPlannerStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinearLocalPlannerStatus>
      _instance;
} _LinearLocalPlannerStatus_default_instance_;
class LocalPlannerStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalPlannerStatus>
      _instance;
} _LocalPlannerStatus_default_instance_;
class AirplaneLinearLocalPlannerParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AirplaneLinearLocalPlannerParams>
      _instance;
} _AirplaneLinearLocalPlannerParams_default_instance_;
class LinearLocalPlannerParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinearLocalPlannerParams>
      _instance;
} _LinearLocalPlannerParams_default_instance_;
class LocalPlannerParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalPlannerParams>
      _instance;
} _LocalPlannerParams_default_instance_;
namespace protobuf_LocalPlanner_2eproto {
static void InitDefaultsAirplaneLinearLocalPlannerStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AirplaneLinearLocalPlannerStatus_default_instance_;
    new (ptr) ::AirplaneLinearLocalPlannerStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AirplaneLinearLocalPlannerStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AirplaneLinearLocalPlannerStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAirplaneLinearLocalPlannerStatus}, {}};

static void InitDefaultsLinearLocalPlannerStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LinearLocalPlannerStatus_default_instance_;
    new (ptr) ::LinearLocalPlannerStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LinearLocalPlannerStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_LinearLocalPlannerStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLinearLocalPlannerStatus}, {
      &protobuf_LocalPlanner_2eproto::scc_info_AirplaneLinearLocalPlannerStatus.base,
      &protobuf_Velocities_2eproto::scc_info_VelocityBody.base,}};

static void InitDefaultsLocalPlannerStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LocalPlannerStatus_default_instance_;
    new (ptr) ::LocalPlannerStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LocalPlannerStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LocalPlannerStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocalPlannerStatus}, {
      &protobuf_LocalPlanner_2eproto::scc_info_LinearLocalPlannerStatus.base,}};

static void InitDefaultsAirplaneLinearLocalPlannerParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AirplaneLinearLocalPlannerParams_default_instance_;
    new (ptr) ::AirplaneLinearLocalPlannerParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AirplaneLinearLocalPlannerParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AirplaneLinearLocalPlannerParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAirplaneLinearLocalPlannerParams}, {}};

static void InitDefaultsLinearLocalPlannerParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LinearLocalPlannerParams_default_instance_;
    new (ptr) ::LinearLocalPlannerParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LinearLocalPlannerParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LinearLocalPlannerParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLinearLocalPlannerParams}, {
      &protobuf_LocalPlanner_2eproto::scc_info_AirplaneLinearLocalPlannerParams.base,}};

static void InitDefaultsLocalPlannerParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LocalPlannerParams_default_instance_;
    new (ptr) ::LocalPlannerParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LocalPlannerParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LocalPlannerParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocalPlannerParams}, {
      &protobuf_LocalPlanner_2eproto::scc_info_LinearLocalPlannerParams.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AirplaneLinearLocalPlannerStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinearLocalPlannerStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalPlannerStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AirplaneLinearLocalPlannerParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LinearLocalPlannerParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalPlannerParams.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AirplaneLinearLocalPlannerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AirplaneLinearLocalPlannerStatus, heading_target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinearLocalPlannerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinearLocalPlannerStatus, airplane_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinearLocalPlannerStatus, current_path_section_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinearLocalPlannerStatus, velocity_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinearLocalPlannerStatus, yaw_rate_target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocalPlannerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocalPlannerStatus, linear_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AirplaneLinearLocalPlannerParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AirplaneLinearLocalPlannerParams, k_altitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AirplaneLinearLocalPlannerParams, k_heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AirplaneLinearLocalPlannerParams, k_yaw_rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinearLocalPlannerParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LinearLocalPlannerParams, airplane_params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocalPlannerParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LocalPlannerParams, linear_params_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AirplaneLinearLocalPlannerStatus)},
  { 6, -1, sizeof(::LinearLocalPlannerStatus)},
  { 15, -1, sizeof(::LocalPlannerStatus)},
  { 21, -1, sizeof(::AirplaneLinearLocalPlannerParams)},
  { 29, -1, sizeof(::LinearLocalPlannerParams)},
  { 35, -1, sizeof(::LocalPlannerParams)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AirplaneLinearLocalPlannerStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LinearLocalPlannerStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LocalPlannerStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AirplaneLinearLocalPlannerParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LinearLocalPlannerParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LocalPlannerParams_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "LocalPlanner.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022LocalPlanner.proto\032\020Velocities.proto\":"
      "\n AirplaneLinearLocalPlannerStatus\022\026\n\016he"
      "ading_target\030\001 \001(\001\"\265\001\n\030LinearLocalPlanne"
      "rStatus\022:\n\017airplane_status\030\001 \001(\0132!.Airpl"
      "aneLinearLocalPlannerStatus\022\034\n\024current_p"
      "ath_section\030\002 \001(\r\022&\n\017velocity_target\030\003 \001"
      "(\0132\r.VelocityBody\022\027\n\017yaw_rate_target\030\004 \001"
      "(\001\"F\n\022LocalPlannerStatus\0220\n\rlinear_statu"
      "s\030\001 \001(\0132\031.LinearLocalPlannerStatus\"]\n Ai"
      "rplaneLinearLocalPlannerParams\022\022\n\nk_alti"
      "tude\030\001 \001(\001\022\021\n\tk_heading\030\002 \001(\001\022\022\n\nk_yaw_r"
      "ate\030\003 \001(\001\"V\n\030LinearLocalPlannerParams\022:\n"
      "\017airplane_params\030\001 \001(\0132!.AirplaneLinearL"
      "ocalPlannerParams\"F\n\022LocalPlannerParams\022"
      "0\n\rlinear_params\030\001 \001(\0132\031.LinearLocalPlan"
      "nerParamsb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 617);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LocalPlanner.proto", &protobuf_RegisterTypes);
  ::protobuf_Velocities_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_LocalPlanner_2eproto

// ===================================================================

void AirplaneLinearLocalPlannerStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AirplaneLinearLocalPlannerStatus::kHeadingTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AirplaneLinearLocalPlannerStatus::AirplaneLinearLocalPlannerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LocalPlanner_2eproto::scc_info_AirplaneLinearLocalPlannerStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AirplaneLinearLocalPlannerStatus)
}
AirplaneLinearLocalPlannerStatus::AirplaneLinearLocalPlannerStatus(const AirplaneLinearLocalPlannerStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  heading_target_ = from.heading_target_;
  // @@protoc_insertion_point(copy_constructor:AirplaneLinearLocalPlannerStatus)
}

void AirplaneLinearLocalPlannerStatus::SharedCtor() {
  heading_target_ = 0;
}

AirplaneLinearLocalPlannerStatus::~AirplaneLinearLocalPlannerStatus() {
  // @@protoc_insertion_point(destructor:AirplaneLinearLocalPlannerStatus)
  SharedDtor();
}

void AirplaneLinearLocalPlannerStatus::SharedDtor() {
}

void AirplaneLinearLocalPlannerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AirplaneLinearLocalPlannerStatus::descriptor() {
  ::protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AirplaneLinearLocalPlannerStatus& AirplaneLinearLocalPlannerStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LocalPlanner_2eproto::scc_info_AirplaneLinearLocalPlannerStatus.base);
  return *internal_default_instance();
}


void AirplaneLinearLocalPlannerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:AirplaneLinearLocalPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heading_target_ = 0;
  _internal_metadata_.Clear();
}

bool AirplaneLinearLocalPlannerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AirplaneLinearLocalPlannerStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double heading_target = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AirplaneLinearLocalPlannerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AirplaneLinearLocalPlannerStatus)
  return false;
#undef DO_
}

void AirplaneLinearLocalPlannerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AirplaneLinearLocalPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double heading_target = 1;
  if (this->heading_target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->heading_target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AirplaneLinearLocalPlannerStatus)
}

::google::protobuf::uint8* AirplaneLinearLocalPlannerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AirplaneLinearLocalPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double heading_target = 1;
  if (this->heading_target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->heading_target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AirplaneLinearLocalPlannerStatus)
  return target;
}

size_t AirplaneLinearLocalPlannerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AirplaneLinearLocalPlannerStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double heading_target = 1;
  if (this->heading_target() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirplaneLinearLocalPlannerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AirplaneLinearLocalPlannerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const AirplaneLinearLocalPlannerStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AirplaneLinearLocalPlannerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AirplaneLinearLocalPlannerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AirplaneLinearLocalPlannerStatus)
    MergeFrom(*source);
  }
}

void AirplaneLinearLocalPlannerStatus::MergeFrom(const AirplaneLinearLocalPlannerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AirplaneLinearLocalPlannerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.heading_target() != 0) {
    set_heading_target(from.heading_target());
  }
}

void AirplaneLinearLocalPlannerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AirplaneLinearLocalPlannerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirplaneLinearLocalPlannerStatus::CopyFrom(const AirplaneLinearLocalPlannerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AirplaneLinearLocalPlannerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirplaneLinearLocalPlannerStatus::IsInitialized() const {
  return true;
}

void AirplaneLinearLocalPlannerStatus::Swap(AirplaneLinearLocalPlannerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AirplaneLinearLocalPlannerStatus::InternalSwap(AirplaneLinearLocalPlannerStatus* other) {
  using std::swap;
  swap(heading_target_, other->heading_target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AirplaneLinearLocalPlannerStatus::GetMetadata() const {
  protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinearLocalPlannerStatus::InitAsDefaultInstance() {
  ::_LinearLocalPlannerStatus_default_instance_._instance.get_mutable()->airplane_status_ = const_cast< ::AirplaneLinearLocalPlannerStatus*>(
      ::AirplaneLinearLocalPlannerStatus::internal_default_instance());
  ::_LinearLocalPlannerStatus_default_instance_._instance.get_mutable()->velocity_target_ = const_cast< ::VelocityBody*>(
      ::VelocityBody::internal_default_instance());
}
void LinearLocalPlannerStatus::clear_velocity_target() {
  if (GetArenaNoVirtual() == NULL && velocity_target_ != NULL) {
    delete velocity_target_;
  }
  velocity_target_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinearLocalPlannerStatus::kAirplaneStatusFieldNumber;
const int LinearLocalPlannerStatus::kCurrentPathSectionFieldNumber;
const int LinearLocalPlannerStatus::kVelocityTargetFieldNumber;
const int LinearLocalPlannerStatus::kYawRateTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinearLocalPlannerStatus::LinearLocalPlannerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LocalPlanner_2eproto::scc_info_LinearLocalPlannerStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LinearLocalPlannerStatus)
}
LinearLocalPlannerStatus::LinearLocalPlannerStatus(const LinearLocalPlannerStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_airplane_status()) {
    airplane_status_ = new ::AirplaneLinearLocalPlannerStatus(*from.airplane_status_);
  } else {
    airplane_status_ = NULL;
  }
  if (from.has_velocity_target()) {
    velocity_target_ = new ::VelocityBody(*from.velocity_target_);
  } else {
    velocity_target_ = NULL;
  }
  ::memcpy(&yaw_rate_target_, &from.yaw_rate_target_,
    static_cast<size_t>(reinterpret_cast<char*>(&current_path_section_) -
    reinterpret_cast<char*>(&yaw_rate_target_)) + sizeof(current_path_section_));
  // @@protoc_insertion_point(copy_constructor:LinearLocalPlannerStatus)
}

void LinearLocalPlannerStatus::SharedCtor() {
  ::memset(&airplane_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_path_section_) -
      reinterpret_cast<char*>(&airplane_status_)) + sizeof(current_path_section_));
}

LinearLocalPlannerStatus::~LinearLocalPlannerStatus() {
  // @@protoc_insertion_point(destructor:LinearLocalPlannerStatus)
  SharedDtor();
}

void LinearLocalPlannerStatus::SharedDtor() {
  if (this != internal_default_instance()) delete airplane_status_;
  if (this != internal_default_instance()) delete velocity_target_;
}

void LinearLocalPlannerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinearLocalPlannerStatus::descriptor() {
  ::protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinearLocalPlannerStatus& LinearLocalPlannerStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LocalPlanner_2eproto::scc_info_LinearLocalPlannerStatus.base);
  return *internal_default_instance();
}


void LinearLocalPlannerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:LinearLocalPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && airplane_status_ != NULL) {
    delete airplane_status_;
  }
  airplane_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && velocity_target_ != NULL) {
    delete velocity_target_;
  }
  velocity_target_ = NULL;
  ::memset(&yaw_rate_target_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&current_path_section_) -
      reinterpret_cast<char*>(&yaw_rate_target_)) + sizeof(current_path_section_));
  _internal_metadata_.Clear();
}

bool LinearLocalPlannerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LinearLocalPlannerStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AirplaneLinearLocalPlannerStatus airplane_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_airplane_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 current_path_section = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &current_path_section_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .VelocityBody velocity_target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yaw_rate_target = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_rate_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LinearLocalPlannerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LinearLocalPlannerStatus)
  return false;
#undef DO_
}

void LinearLocalPlannerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LinearLocalPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AirplaneLinearLocalPlannerStatus airplane_status = 1;
  if (this->has_airplane_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_airplane_status(), output);
  }

  // uint32 current_path_section = 2;
  if (this->current_path_section() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->current_path_section(), output);
  }

  // .VelocityBody velocity_target = 3;
  if (this->has_velocity_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_velocity_target(), output);
  }

  // double yaw_rate_target = 4;
  if (this->yaw_rate_target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->yaw_rate_target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LinearLocalPlannerStatus)
}

::google::protobuf::uint8* LinearLocalPlannerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LinearLocalPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AirplaneLinearLocalPlannerStatus airplane_status = 1;
  if (this->has_airplane_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_airplane_status(), deterministic, target);
  }

  // uint32 current_path_section = 2;
  if (this->current_path_section() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->current_path_section(), target);
  }

  // .VelocityBody velocity_target = 3;
  if (this->has_velocity_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_velocity_target(), deterministic, target);
  }

  // double yaw_rate_target = 4;
  if (this->yaw_rate_target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->yaw_rate_target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LinearLocalPlannerStatus)
  return target;
}

size_t LinearLocalPlannerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LinearLocalPlannerStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .AirplaneLinearLocalPlannerStatus airplane_status = 1;
  if (this->has_airplane_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *airplane_status_);
  }

  // .VelocityBody velocity_target = 3;
  if (this->has_velocity_target()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocity_target_);
  }

  // double yaw_rate_target = 4;
  if (this->yaw_rate_target() != 0) {
    total_size += 1 + 8;
  }

  // uint32 current_path_section = 2;
  if (this->current_path_section() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->current_path_section());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinearLocalPlannerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LinearLocalPlannerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const LinearLocalPlannerStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinearLocalPlannerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LinearLocalPlannerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LinearLocalPlannerStatus)
    MergeFrom(*source);
  }
}

void LinearLocalPlannerStatus::MergeFrom(const LinearLocalPlannerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LinearLocalPlannerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_airplane_status()) {
    mutable_airplane_status()->::AirplaneLinearLocalPlannerStatus::MergeFrom(from.airplane_status());
  }
  if (from.has_velocity_target()) {
    mutable_velocity_target()->::VelocityBody::MergeFrom(from.velocity_target());
  }
  if (from.yaw_rate_target() != 0) {
    set_yaw_rate_target(from.yaw_rate_target());
  }
  if (from.current_path_section() != 0) {
    set_current_path_section(from.current_path_section());
  }
}

void LinearLocalPlannerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LinearLocalPlannerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinearLocalPlannerStatus::CopyFrom(const LinearLocalPlannerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LinearLocalPlannerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinearLocalPlannerStatus::IsInitialized() const {
  return true;
}

void LinearLocalPlannerStatus::Swap(LinearLocalPlannerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinearLocalPlannerStatus::InternalSwap(LinearLocalPlannerStatus* other) {
  using std::swap;
  swap(airplane_status_, other->airplane_status_);
  swap(velocity_target_, other->velocity_target_);
  swap(yaw_rate_target_, other->yaw_rate_target_);
  swap(current_path_section_, other->current_path_section_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinearLocalPlannerStatus::GetMetadata() const {
  protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalPlannerStatus::InitAsDefaultInstance() {
  ::_LocalPlannerStatus_default_instance_._instance.get_mutable()->linear_status_ = const_cast< ::LinearLocalPlannerStatus*>(
      ::LinearLocalPlannerStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalPlannerStatus::kLinearStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalPlannerStatus::LocalPlannerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LocalPlanner_2eproto::scc_info_LocalPlannerStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LocalPlannerStatus)
}
LocalPlannerStatus::LocalPlannerStatus(const LocalPlannerStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_linear_status()) {
    linear_status_ = new ::LinearLocalPlannerStatus(*from.linear_status_);
  } else {
    linear_status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:LocalPlannerStatus)
}

void LocalPlannerStatus::SharedCtor() {
  linear_status_ = NULL;
}

LocalPlannerStatus::~LocalPlannerStatus() {
  // @@protoc_insertion_point(destructor:LocalPlannerStatus)
  SharedDtor();
}

void LocalPlannerStatus::SharedDtor() {
  if (this != internal_default_instance()) delete linear_status_;
}

void LocalPlannerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocalPlannerStatus::descriptor() {
  ::protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalPlannerStatus& LocalPlannerStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LocalPlanner_2eproto::scc_info_LocalPlannerStatus.base);
  return *internal_default_instance();
}


void LocalPlannerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:LocalPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && linear_status_ != NULL) {
    delete linear_status_;
  }
  linear_status_ = NULL;
  _internal_metadata_.Clear();
}

bool LocalPlannerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LocalPlannerStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LinearLocalPlannerStatus linear_status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LocalPlannerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LocalPlannerStatus)
  return false;
#undef DO_
}

void LocalPlannerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LocalPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LinearLocalPlannerStatus linear_status = 1;
  if (this->has_linear_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_linear_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LocalPlannerStatus)
}

::google::protobuf::uint8* LocalPlannerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LocalPlannerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LinearLocalPlannerStatus linear_status = 1;
  if (this->has_linear_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_linear_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LocalPlannerStatus)
  return target;
}

size_t LocalPlannerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LocalPlannerStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LinearLocalPlannerStatus linear_status = 1;
  if (this->has_linear_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *linear_status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalPlannerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LocalPlannerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalPlannerStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalPlannerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LocalPlannerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LocalPlannerStatus)
    MergeFrom(*source);
  }
}

void LocalPlannerStatus::MergeFrom(const LocalPlannerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LocalPlannerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_linear_status()) {
    mutable_linear_status()->::LinearLocalPlannerStatus::MergeFrom(from.linear_status());
  }
}

void LocalPlannerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LocalPlannerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalPlannerStatus::CopyFrom(const LocalPlannerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LocalPlannerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalPlannerStatus::IsInitialized() const {
  return true;
}

void LocalPlannerStatus::Swap(LocalPlannerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalPlannerStatus::InternalSwap(LocalPlannerStatus* other) {
  using std::swap;
  swap(linear_status_, other->linear_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocalPlannerStatus::GetMetadata() const {
  protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AirplaneLinearLocalPlannerParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AirplaneLinearLocalPlannerParams::kKAltitudeFieldNumber;
const int AirplaneLinearLocalPlannerParams::kKHeadingFieldNumber;
const int AirplaneLinearLocalPlannerParams::kKYawRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AirplaneLinearLocalPlannerParams::AirplaneLinearLocalPlannerParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LocalPlanner_2eproto::scc_info_AirplaneLinearLocalPlannerParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AirplaneLinearLocalPlannerParams)
}
AirplaneLinearLocalPlannerParams::AirplaneLinearLocalPlannerParams(const AirplaneLinearLocalPlannerParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&k_altitude_, &from.k_altitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&k_yaw_rate_) -
    reinterpret_cast<char*>(&k_altitude_)) + sizeof(k_yaw_rate_));
  // @@protoc_insertion_point(copy_constructor:AirplaneLinearLocalPlannerParams)
}

void AirplaneLinearLocalPlannerParams::SharedCtor() {
  ::memset(&k_altitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&k_yaw_rate_) -
      reinterpret_cast<char*>(&k_altitude_)) + sizeof(k_yaw_rate_));
}

AirplaneLinearLocalPlannerParams::~AirplaneLinearLocalPlannerParams() {
  // @@protoc_insertion_point(destructor:AirplaneLinearLocalPlannerParams)
  SharedDtor();
}

void AirplaneLinearLocalPlannerParams::SharedDtor() {
}

void AirplaneLinearLocalPlannerParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AirplaneLinearLocalPlannerParams::descriptor() {
  ::protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AirplaneLinearLocalPlannerParams& AirplaneLinearLocalPlannerParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LocalPlanner_2eproto::scc_info_AirplaneLinearLocalPlannerParams.base);
  return *internal_default_instance();
}


void AirplaneLinearLocalPlannerParams::Clear() {
// @@protoc_insertion_point(message_clear_start:AirplaneLinearLocalPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&k_altitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&k_yaw_rate_) -
      reinterpret_cast<char*>(&k_altitude_)) + sizeof(k_yaw_rate_));
  _internal_metadata_.Clear();
}

bool AirplaneLinearLocalPlannerParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AirplaneLinearLocalPlannerParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double k_altitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &k_altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double k_heading = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &k_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double k_yaw_rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &k_yaw_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AirplaneLinearLocalPlannerParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AirplaneLinearLocalPlannerParams)
  return false;
#undef DO_
}

void AirplaneLinearLocalPlannerParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AirplaneLinearLocalPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double k_altitude = 1;
  if (this->k_altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->k_altitude(), output);
  }

  // double k_heading = 2;
  if (this->k_heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->k_heading(), output);
  }

  // double k_yaw_rate = 3;
  if (this->k_yaw_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->k_yaw_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AirplaneLinearLocalPlannerParams)
}

::google::protobuf::uint8* AirplaneLinearLocalPlannerParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AirplaneLinearLocalPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double k_altitude = 1;
  if (this->k_altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->k_altitude(), target);
  }

  // double k_heading = 2;
  if (this->k_heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->k_heading(), target);
  }

  // double k_yaw_rate = 3;
  if (this->k_yaw_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->k_yaw_rate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AirplaneLinearLocalPlannerParams)
  return target;
}

size_t AirplaneLinearLocalPlannerParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AirplaneLinearLocalPlannerParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double k_altitude = 1;
  if (this->k_altitude() != 0) {
    total_size += 1 + 8;
  }

  // double k_heading = 2;
  if (this->k_heading() != 0) {
    total_size += 1 + 8;
  }

  // double k_yaw_rate = 3;
  if (this->k_yaw_rate() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirplaneLinearLocalPlannerParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AirplaneLinearLocalPlannerParams)
  GOOGLE_DCHECK_NE(&from, this);
  const AirplaneLinearLocalPlannerParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AirplaneLinearLocalPlannerParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AirplaneLinearLocalPlannerParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AirplaneLinearLocalPlannerParams)
    MergeFrom(*source);
  }
}

void AirplaneLinearLocalPlannerParams::MergeFrom(const AirplaneLinearLocalPlannerParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AirplaneLinearLocalPlannerParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.k_altitude() != 0) {
    set_k_altitude(from.k_altitude());
  }
  if (from.k_heading() != 0) {
    set_k_heading(from.k_heading());
  }
  if (from.k_yaw_rate() != 0) {
    set_k_yaw_rate(from.k_yaw_rate());
  }
}

void AirplaneLinearLocalPlannerParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AirplaneLinearLocalPlannerParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirplaneLinearLocalPlannerParams::CopyFrom(const AirplaneLinearLocalPlannerParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AirplaneLinearLocalPlannerParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirplaneLinearLocalPlannerParams::IsInitialized() const {
  return true;
}

void AirplaneLinearLocalPlannerParams::Swap(AirplaneLinearLocalPlannerParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AirplaneLinearLocalPlannerParams::InternalSwap(AirplaneLinearLocalPlannerParams* other) {
  using std::swap;
  swap(k_altitude_, other->k_altitude_);
  swap(k_heading_, other->k_heading_);
  swap(k_yaw_rate_, other->k_yaw_rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AirplaneLinearLocalPlannerParams::GetMetadata() const {
  protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinearLocalPlannerParams::InitAsDefaultInstance() {
  ::_LinearLocalPlannerParams_default_instance_._instance.get_mutable()->airplane_params_ = const_cast< ::AirplaneLinearLocalPlannerParams*>(
      ::AirplaneLinearLocalPlannerParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinearLocalPlannerParams::kAirplaneParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinearLocalPlannerParams::LinearLocalPlannerParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LocalPlanner_2eproto::scc_info_LinearLocalPlannerParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LinearLocalPlannerParams)
}
LinearLocalPlannerParams::LinearLocalPlannerParams(const LinearLocalPlannerParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_airplane_params()) {
    airplane_params_ = new ::AirplaneLinearLocalPlannerParams(*from.airplane_params_);
  } else {
    airplane_params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:LinearLocalPlannerParams)
}

void LinearLocalPlannerParams::SharedCtor() {
  airplane_params_ = NULL;
}

LinearLocalPlannerParams::~LinearLocalPlannerParams() {
  // @@protoc_insertion_point(destructor:LinearLocalPlannerParams)
  SharedDtor();
}

void LinearLocalPlannerParams::SharedDtor() {
  if (this != internal_default_instance()) delete airplane_params_;
}

void LinearLocalPlannerParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LinearLocalPlannerParams::descriptor() {
  ::protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinearLocalPlannerParams& LinearLocalPlannerParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LocalPlanner_2eproto::scc_info_LinearLocalPlannerParams.base);
  return *internal_default_instance();
}


void LinearLocalPlannerParams::Clear() {
// @@protoc_insertion_point(message_clear_start:LinearLocalPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && airplane_params_ != NULL) {
    delete airplane_params_;
  }
  airplane_params_ = NULL;
  _internal_metadata_.Clear();
}

bool LinearLocalPlannerParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LinearLocalPlannerParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .AirplaneLinearLocalPlannerParams airplane_params = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_airplane_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LinearLocalPlannerParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LinearLocalPlannerParams)
  return false;
#undef DO_
}

void LinearLocalPlannerParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LinearLocalPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AirplaneLinearLocalPlannerParams airplane_params = 1;
  if (this->has_airplane_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_airplane_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LinearLocalPlannerParams)
}

::google::protobuf::uint8* LinearLocalPlannerParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LinearLocalPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .AirplaneLinearLocalPlannerParams airplane_params = 1;
  if (this->has_airplane_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_airplane_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LinearLocalPlannerParams)
  return target;
}

size_t LinearLocalPlannerParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LinearLocalPlannerParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .AirplaneLinearLocalPlannerParams airplane_params = 1;
  if (this->has_airplane_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *airplane_params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LinearLocalPlannerParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LinearLocalPlannerParams)
  GOOGLE_DCHECK_NE(&from, this);
  const LinearLocalPlannerParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinearLocalPlannerParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LinearLocalPlannerParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LinearLocalPlannerParams)
    MergeFrom(*source);
  }
}

void LinearLocalPlannerParams::MergeFrom(const LinearLocalPlannerParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LinearLocalPlannerParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_airplane_params()) {
    mutable_airplane_params()->::AirplaneLinearLocalPlannerParams::MergeFrom(from.airplane_params());
  }
}

void LinearLocalPlannerParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LinearLocalPlannerParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinearLocalPlannerParams::CopyFrom(const LinearLocalPlannerParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LinearLocalPlannerParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinearLocalPlannerParams::IsInitialized() const {
  return true;
}

void LinearLocalPlannerParams::Swap(LinearLocalPlannerParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinearLocalPlannerParams::InternalSwap(LinearLocalPlannerParams* other) {
  using std::swap;
  swap(airplane_params_, other->airplane_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LinearLocalPlannerParams::GetMetadata() const {
  protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalPlannerParams::InitAsDefaultInstance() {
  ::_LocalPlannerParams_default_instance_._instance.get_mutable()->linear_params_ = const_cast< ::LinearLocalPlannerParams*>(
      ::LinearLocalPlannerParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalPlannerParams::kLinearParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalPlannerParams::LocalPlannerParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LocalPlanner_2eproto::scc_info_LocalPlannerParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LocalPlannerParams)
}
LocalPlannerParams::LocalPlannerParams(const LocalPlannerParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_linear_params()) {
    linear_params_ = new ::LinearLocalPlannerParams(*from.linear_params_);
  } else {
    linear_params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:LocalPlannerParams)
}

void LocalPlannerParams::SharedCtor() {
  linear_params_ = NULL;
}

LocalPlannerParams::~LocalPlannerParams() {
  // @@protoc_insertion_point(destructor:LocalPlannerParams)
  SharedDtor();
}

void LocalPlannerParams::SharedDtor() {
  if (this != internal_default_instance()) delete linear_params_;
}

void LocalPlannerParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocalPlannerParams::descriptor() {
  ::protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalPlannerParams& LocalPlannerParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LocalPlanner_2eproto::scc_info_LocalPlannerParams.base);
  return *internal_default_instance();
}


void LocalPlannerParams::Clear() {
// @@protoc_insertion_point(message_clear_start:LocalPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && linear_params_ != NULL) {
    delete linear_params_;
  }
  linear_params_ = NULL;
  _internal_metadata_.Clear();
}

bool LocalPlannerParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LocalPlannerParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LinearLocalPlannerParams linear_params = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LocalPlannerParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LocalPlannerParams)
  return false;
#undef DO_
}

void LocalPlannerParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LocalPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LinearLocalPlannerParams linear_params = 1;
  if (this->has_linear_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_linear_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LocalPlannerParams)
}

::google::protobuf::uint8* LocalPlannerParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LocalPlannerParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LinearLocalPlannerParams linear_params = 1;
  if (this->has_linear_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_linear_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LocalPlannerParams)
  return target;
}

size_t LocalPlannerParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LocalPlannerParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LinearLocalPlannerParams linear_params = 1;
  if (this->has_linear_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *linear_params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalPlannerParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LocalPlannerParams)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalPlannerParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalPlannerParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LocalPlannerParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LocalPlannerParams)
    MergeFrom(*source);
  }
}

void LocalPlannerParams::MergeFrom(const LocalPlannerParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LocalPlannerParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_linear_params()) {
    mutable_linear_params()->::LinearLocalPlannerParams::MergeFrom(from.linear_params());
  }
}

void LocalPlannerParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LocalPlannerParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalPlannerParams::CopyFrom(const LocalPlannerParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LocalPlannerParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalPlannerParams::IsInitialized() const {
  return true;
}

void LocalPlannerParams::Swap(LocalPlannerParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalPlannerParams::InternalSwap(LocalPlannerParams* other) {
  using std::swap;
  swap(linear_params_, other->linear_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocalPlannerParams::GetMetadata() const {
  protobuf_LocalPlanner_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LocalPlanner_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AirplaneLinearLocalPlannerStatus* Arena::CreateMaybeMessage< ::AirplaneLinearLocalPlannerStatus >(Arena* arena) {
  return Arena::CreateInternal< ::AirplaneLinearLocalPlannerStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LinearLocalPlannerStatus* Arena::CreateMaybeMessage< ::LinearLocalPlannerStatus >(Arena* arena) {
  return Arena::CreateInternal< ::LinearLocalPlannerStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LocalPlannerStatus* Arena::CreateMaybeMessage< ::LocalPlannerStatus >(Arena* arena) {
  return Arena::CreateInternal< ::LocalPlannerStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AirplaneLinearLocalPlannerParams* Arena::CreateMaybeMessage< ::AirplaneLinearLocalPlannerParams >(Arena* arena) {
  return Arena::CreateInternal< ::AirplaneLinearLocalPlannerParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LinearLocalPlannerParams* Arena::CreateMaybeMessage< ::LinearLocalPlannerParams >(Arena* arena) {
  return Arena::CreateInternal< ::LinearLocalPlannerParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LocalPlannerParams* Arena::CreateMaybeMessage< ::LocalPlannerParams >(Arena* arena) {
  return Arena::CreateInternal< ::LocalPlannerParams >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
