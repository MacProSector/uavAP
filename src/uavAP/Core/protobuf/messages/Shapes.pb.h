/*******************************************************************************
 * Copyright (C) 2018 University of Illinois Board of Trustees
 * 
 * This file is part of uavAP.
 * 
 * uavAP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * uavAP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Shapes.proto

#ifndef PROTOBUF_INCLUDED_Shapes_2eproto
#define PROTOBUF_INCLUDED_Shapes_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Positions.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Shapes_2eproto 

namespace protobuf_Shapes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Shapes_2eproto
class Rectangle;
class RectangleDefaultTypeInternal;
extern RectangleDefaultTypeInternal _Rectangle_default_instance_;
namespace google {
namespace protobuf {
template<> ::Rectangle* Arena::CreateMaybeMessage<::Rectangle>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Rectangle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Rectangle) */ {
 public:
  Rectangle();
  virtual ~Rectangle();

  Rectangle(const Rectangle& from);

  inline Rectangle& operator=(const Rectangle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rectangle(Rectangle&& from) noexcept
    : Rectangle() {
    *this = ::std::move(from);
  }

  inline Rectangle& operator=(Rectangle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Rectangle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rectangle* internal_default_instance() {
    return reinterpret_cast<const Rectangle*>(
               &_Rectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Rectangle* other);
  friend void swap(Rectangle& a, Rectangle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rectangle* New() const final {
    return CreateMaybeMessage<Rectangle>(NULL);
  }

  Rectangle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Rectangle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Rectangle& from);
  void MergeFrom(const Rectangle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Rectangle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PositionENU center = 1;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 1;
  private:
  const ::PositionENU& _internal_center() const;
  public:
  const ::PositionENU& center() const;
  ::PositionENU* release_center();
  ::PositionENU* mutable_center();
  void set_allocated_center(::PositionENU* center);

  // double major_side_length = 2;
  void clear_major_side_length();
  static const int kMajorSideLengthFieldNumber = 2;
  double major_side_length() const;
  void set_major_side_length(double value);

  // double minor_side_length = 3;
  void clear_minor_side_length();
  static const int kMinorSideLengthFieldNumber = 3;
  double minor_side_length() const;
  void set_minor_side_length(double value);

  // double major_side_orientation = 4;
  void clear_major_side_orientation();
  static const int kMajorSideOrientationFieldNumber = 4;
  double major_side_orientation() const;
  void set_major_side_orientation(double value);

  // @@protoc_insertion_point(class_scope:Rectangle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PositionENU* center_;
  double major_side_length_;
  double minor_side_length_;
  double major_side_orientation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Shapes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Rectangle

// .PositionENU center = 1;
inline bool Rectangle::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline const ::PositionENU& Rectangle::_internal_center() const {
  return *center_;
}
inline const ::PositionENU& Rectangle::center() const {
  const ::PositionENU* p = center_;
  // @@protoc_insertion_point(field_get:Rectangle.center)
  return p != NULL ? *p : *reinterpret_cast<const ::PositionENU*>(
      &::_PositionENU_default_instance_);
}
inline ::PositionENU* Rectangle::release_center() {
  // @@protoc_insertion_point(field_release:Rectangle.center)
  
  ::PositionENU* temp = center_;
  center_ = NULL;
  return temp;
}
inline ::PositionENU* Rectangle::mutable_center() {
  
  if (center_ == NULL) {
    auto* p = CreateMaybeMessage<::PositionENU>(GetArenaNoVirtual());
    center_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Rectangle.center)
  return center_;
}
inline void Rectangle::set_allocated_center(::PositionENU* center) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(center_);
  }
  if (center) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      center = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, center, submessage_arena);
    }
    
  } else {
    
  }
  center_ = center;
  // @@protoc_insertion_point(field_set_allocated:Rectangle.center)
}

// double major_side_length = 2;
inline void Rectangle::clear_major_side_length() {
  major_side_length_ = 0;
}
inline double Rectangle::major_side_length() const {
  // @@protoc_insertion_point(field_get:Rectangle.major_side_length)
  return major_side_length_;
}
inline void Rectangle::set_major_side_length(double value) {
  
  major_side_length_ = value;
  // @@protoc_insertion_point(field_set:Rectangle.major_side_length)
}

// double minor_side_length = 3;
inline void Rectangle::clear_minor_side_length() {
  minor_side_length_ = 0;
}
inline double Rectangle::minor_side_length() const {
  // @@protoc_insertion_point(field_get:Rectangle.minor_side_length)
  return minor_side_length_;
}
inline void Rectangle::set_minor_side_length(double value) {
  
  minor_side_length_ = value;
  // @@protoc_insertion_point(field_set:Rectangle.minor_side_length)
}

// double major_side_orientation = 4;
inline void Rectangle::clear_major_side_orientation() {
  major_side_orientation_ = 0;
}
inline double Rectangle::major_side_orientation() const {
  // @@protoc_insertion_point(field_get:Rectangle.major_side_orientation)
  return major_side_orientation_;
}
inline void Rectangle::set_major_side_orientation(double value) {
  
  major_side_orientation_ = value;
  // @@protoc_insertion_point(field_set:Rectangle.major_side_orientation)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Shapes_2eproto
